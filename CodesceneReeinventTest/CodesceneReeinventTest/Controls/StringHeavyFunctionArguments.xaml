<UserControl x:Class="CodesceneReeinventTest.Controls.StringHeavyFunctionArguments"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CodesceneReeinventTest.Controls"
             mc:Ignorable="d" 
             >
    <Grid HorizontalAlignment="Stretch">
        <ScrollViewer VerticalScrollBarVisibility="Auto" Foreground="{x:Static SystemColors.ControlLightBrush}">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" FontSize="12" Foreground="{x:Static SystemColors.ControlLightBrush}">
                    <Image Source="/CodesceneReeinventTest;component/Resources/cs-logo.png" Width="22" Height="22" Margin="0,0,0,-4"/>
                    <Run Text="String Heavy Function Arguments" FontWeight="Bold" FontSize="16"/>
                    <LineBreak/>    
                </TextBlock>
                <!-- Description -->
                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            The functions in this file have a high ratio of strings as arguments. Avoid adding more.
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Margin="0,10,0,10">
            Heavy usage of built-in string types indicate a missing domain language. There are also validation
                    <LineBreak />
                    implications since code needs to be written that checks the semantics of the string type.
                </TextBlock>

                <!-- Solution Section -->
                <TextBlock FontSize="16" FontWeight="Bold" Margin="0,10,0,5">
            Solution
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            Introduce data types that encapsulate the semantics. For example, a <Italic>user_name</Italic> is better 
                    <LineBreak />
                    represented as a constrained <Italic>User</Italic> type rather than a pure string, which could be anything.
                </TextBlock>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
