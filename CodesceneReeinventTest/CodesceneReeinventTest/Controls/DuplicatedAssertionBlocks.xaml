<UserControl x:Class="CodesceneReeinventTest.Controls.DuplicatedAssertionBlocks"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CodesceneReeinventTest.Controls"
             mc:Ignorable="d" 
             >
    <Grid HorizontalAlignment="Stretch">
        <ScrollViewer VerticalScrollBarVisibility="Auto" Foreground="{x:Static SystemColors.ControlLightBrush}">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" FontSize="12" Foreground="{x:Static SystemColors.ControlLightBrush}">
 <Image Source="/CodesceneReeinventTest;component/Resources/cs-logo.png" Width="22" Height="22" Margin="0,0,0,-4"/>
 <Run Text="Duplicated Assertion Blocks" FontWeight="Bold" FontSize="16"/>
 <LineBreak/>
                </TextBlock>
                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            This test file has several blocks of duplicated assertion statements. Avoid adding more.
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Margin="0,10,0,10">
            Just like duplicated logic in application code is problematic, duplicated test criteria lead to code that's hard to maintain. 
                    <LineBreak />
                    Duplicated assertion blocks usually indicate a missing abstraction, either a supporting test function or a specific test is missing.
                </TextBlock>

                <!-- Solution Section -->
                <TextBlock FontSize="16" FontWeight="Bold" Margin="0,10,0,5">
            Solution
                </TextBlock>

                <!-- Solution Details -->
                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            Consider encapsulating the duplicated assertions (i.e. test criteria) in a custom assert statement that you can then re-use. 
                    <LineBreak />
                    We also recommend considering the granularity of the tests; sometimes a single test tests too many things,
                    <LineBreak />
                    and extracting smaller tests can usually help you get rid of the duplication.
                </TextBlock>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
