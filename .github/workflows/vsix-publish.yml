name: Publish latest VSIX release (manual)

on:
  workflow_dispatch:
    inputs:
      publish_vs_marketplace:
        type: boolean
        default: true
        description: Publish to Visual Studio Marketplace

jobs:
  # ------------------------
  # Job 1: Prepare VSIX
  # ------------------------
  prepare:
    name: Prepare VSIX package
    runs-on: windows-latest
    steps:
      - name: Get latest release
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          regex: true
          file: '.*\.vsix'
          version: 'latest'
          target: './'
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Output file-name for use in next job
        id: latest-release
        shell: pwsh
        run: |
          $file = (Get-ChildItem *.vsix | Select-Object -First 1).FullName
          if (-not $file) { throw "No VSIX file found!" }
          echo "file-name=$file" >> $env:GITHUB_OUTPUT
          Write-Host "Prepared VSIX: $file"

      - name: Upload VSIX artifact (for publish job)
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: '*.vsix'

  # ------------------------
  # Job 2: Publish VSIX
  # ------------------------
  publish:
    name: Publish VSIX Extension
    runs-on: windows-latest
    needs: prepare
    if: ${{ github.event.inputs.publish_vs_marketplace == 'true' }}
    steps:
      - name: Download VSIX artifact
        uses: actions/download-artifact@v4
        with:
          name: vsix-package
          path: .

      - name: Find VsixPublisher.exe
        id: find-vsixpub
        shell: pwsh
        run: |
          $vsix = Get-ChildItem "C:\Program Files\Microsoft Visual Studio\2022" -Recurse -Filter VsixPublisher.exe -ErrorAction SilentlyContinue | 
                  Select-Object -First 1 -ExpandProperty FullName
          if (-not $vsix) { throw "VsixPublisher.exe not found on runner." }
          echo "path=$vsix" >> $env:GITHUB_OUTPUT
          Write-Host "Found VsixPublisher at: $vsix"

      - name: Publish to Visual Studio Marketplace
        shell: pwsh
        run: |
          $file = (Get-ChildItem *.vsix | Select-Object -First 1).FullName
          Write-Host "Publishing VSIX: $file"
          & "${{ steps.find-vsixpub.outputs.path }}" publish `
            -payload "$file" `
            -publishManifest "Codescene.VSExtension.VS2022/publishManifest.publishmanifest" `
            -personalAccessToken "${{ secrets.VISUAL_STUDIO_MARKETPLACE_PUBLISHING_TOKEN }}"
