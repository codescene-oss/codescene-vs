name: Build and Test VSIX Extension

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    name: Build and Test VSIX
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup VSTest
        uses: darenm/Setup-VSTest@v1

      - name: Get latest release URL
        run: |
          $release = Invoke-RestMethod https://api.github.com/repos/empear-analytics/cs-webview/releases/latest
          $latest_url = $release.assets[0].browser_download_url
          Write-Host "Latest asset URL: $latest_url"
          Invoke-WebRequest -Uri $latest_url -OutFile cs-webview.zip
          Expand-Archive cs-webview.zip -DestinationPath cs-webview -Force

      - name: Download latest cs-webview release
        run: |
          echo "Downloading from $download_url"
          curl -L -o cs-webview.zip "$download_url"
          mkdir cs-webview
          unzip -q cs-webview.zip -d cs-webview

      - name: Copy web assets into project
        run: |
          mkdir -p Codescene.VSExtension.VS2022/ToolWindows/WebComponent
          cp cs-webview/index.html Codescene.VSExtension.VS2022/ToolWindows/WebComponent/
          cp cs-webview/assets/index.css Codescene.VSExtension.VS2022/ToolWindows/WebComponent/
          cp cs-webview/assets/index.js Codescene.VSExtension.VS2022/ToolWindows/WebComponent/


      - name: Restore NuGet packages
        run: nuget restore Codescene.VSExtension.VS2022/Codescene.VSExtension.sln

      - name: Build solution
        run: msbuild Codescene.VSExtension.VS2022/Codescene.VSExtension.sln /p:Configuration=Release /p:Platform="Any CPU"

      - name: Run unit tests
        if: ${{ hashFiles('**/*Tests.dll') != '' }}
        run: vstest.console.exe **\bin\Release\*Tests.dll /logger:trx

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/*.trx'

      - name: Upload VSIX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix-package
          path: '**/*.vsix'

      - name: Create GitHub Release (only on tag)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: "Automated build for ${{ github.ref_name }}"
          files: '**/*.vsix'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
