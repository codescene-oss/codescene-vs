<UserControl x:Class="Codescene.VSExtension.VS2022.Controls.CodeDuplication"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Codescene.VSExtension.VS2022.Controls"
             mc:Ignorable="d" 
             >
    <Grid HorizontalAlignment="Stretch">
        <ScrollViewer Margin="10" VerticalScrollBarVisibility="Auto" Foreground="{x:Static SystemColors.ControlLightBrush}">
            <StackPanel>
                <TextBlock TextWrapping="Wrap" FontSize="12" Foreground="{x:Static SystemColors.ControlLightBrush}">
                <Image Source="/Codescene.VSExtension.VS2022;component/Resources/cs-logo.png" Width="22" Height="22" Margin="0,0,0,-4"/>
                <Run Text="Code Duplication" FontWeight="Bold" FontSize="16"/>
                <LineBreak/>    
                </TextBlock>
                <TextBlock Margin="0,0,0,0">
            Avoid duplicated, aka copy-pasted, code inside the module. More duplication lowers the code health.
                </TextBlock>

                <TextBlock Margin="0,10,0,10" TextWrapping="Wrap">
            Duplicated code might lead to code that's harder to maintain as the same logical change has to be 
                    <LineBreak />
                    done in multiple places. Look to extract a shared representation which can be re-used across functions.
                </TextBlock>

                <!-- Solution Section -->
                <TextBlock FontSize="16" FontWeight="Bold" Margin="0,10,0,5">
            Solution
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            A certain degree of duplicated code might be acceptable. The problems start when it is the same behavior
                    <LineBreak />
                     that is duplicated across the functions in the module, i.e. a violation of the 
            <Hyperlink TextDecorations="None" NavigateUri="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" RequestNavigate="Hyperlink_RequestNavigate">
                Don't Repeat Yourself (DRY) principle
            </Hyperlink>.
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            DRY violations lead to code that is changed together in predictable patterns, which is both expensive and risky.
                    <LineBreak />
                    DRY violations can be identified using 
            <Hyperlink TextDecorations="None" NavigateUri="https://codescene.com/blog/software-revolution-part3/" RequestNavigate="Hyperlink_RequestNavigate">
                CodeScene's X-Ray analysis
            </Hyperlink> 
            to detect clusters of change coupled functions 
                    <LineBreak />
                    with high code similarity.
                </TextBlock>

                <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">
            Once you have identified the similarities across functions, look to extract and encapsulate the concept 
                    <LineBreak />
                    that varies into its own function(s). These shared abstractions can then be re-used, which minimizes 
                    <LineBreak />
                    the amount of duplication and simplifies change.
                </TextBlock>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</UserControl>
